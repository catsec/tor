#!/bin/bash
# Step 8: Tor Proxy Configuration
# Purpose: Configure Tor for secure, anonymous web browsing and proxy services
# Network: Runs SOCKS proxy on port 9050, control port on 9051
# Security: Configured with hardened settings for maximum anonymity

# Source utilities
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/../lib/utils.sh"

tor() {
    # Check if previous step requires reboot before proceeding
    check_reboot_required "tor" "8"
    
    echo "Step 8: Configuring Tor proxy..."
    
    # Tor was installed and verified in steps 2-3
    # WireGuard was set up in step 7
    
    # BACKUP EXISTING CONFIGURATION: Safety measure
    if [[ -f /etc/tor/torrc ]]; then
        cp /etc/tor/torrc /etc/tor/torrc.backup.$(date +%Y%m%d_%H%M%S)
        echo "Existing Tor configuration backed up"
    fi
    
    echo "Creating secure Tor configuration..."
    
    # Verify WireGuard is currently running (step 7 was completed, but service might be stopped)
    local wireguard_running=true
    if ! systemctl is-active wg-quick@wg0 &>/dev/null || ! ip addr show wg0 &>/dev/null; then
        wireguard_running=false
        echo "WARNING: WireGuard was configured but is not currently running"
        echo "Tor will be configured for WireGuard access, but you may need to start WireGuard:"
        echo "  sudo systemctl start wg-quick@wg0"
    else
        echo "WireGuard is running: Enabling Tor access via VPN"
    fi
    
    # HARDENED TOR CONFIGURATION: Security-focused settings with optional WireGuard support
    cat > /etc/tor/torrc << EOF
# Tor Configuration - Security Hardened with Optional WireGuard Support
# Generated by Debian Security Setup Script

## Basic Configuration
User debian-tor
PidFile /var/run/tor/tor.pid
Log notice file /var/log/tor/log
DataDirectory /var/lib/tor

## Network Configuration
# SOCKS proxy accessible from localhost
SocksPort 127.0.0.1:9050 IsolateDestAddr IsolateDestPort
EOF

    # Add WireGuard SOCKS port only if WireGuard is running
    if [[ "$wireguard_running" == "true" ]]; then
        cat >> /etc/tor/torrc << EOF
# SOCKS proxy accessible from WireGuard clients
SocksPort 10.11.12.1:9050 IsolateDestAddr IsolateDestPort
EOF
    fi

    # Continue with rest of configuration
    cat >> /etc/tor/torrc << 'EOF'
# Control port with cookie authentication for nyx
ControlPort 127.0.0.1:9051
CookieAuthentication 1
CookieAuthFileGroupReadable 1

## Hidden Services
# Nginx web server hidden service
HiddenServiceDir /var/lib/tor/nginx_hidden_service/
HiddenServicePort 80 127.0.0.1:80
HiddenServiceVersion 3

# SSH hidden service
HiddenServiceDir /var/lib/tor/ssh_hidden_service/
HiddenServicePort 22 127.0.0.1:22
HiddenServiceVersion 3

## Security Settings
# Reject all single-hop relays
AllowSingleHopCircuits 0

# Don't allow applications to connect to non-Tor network
EnforceDistinctSubnets 1

# Use only stable, fast relays
StrictNodes 1
# FascistFirewall disabled - would prevent Tor from connecting to directory servers
# ReachableAddresses *:80,*:443

## Privacy Settings
# Disable DNS leaks
DNSPort 127.0.0.1:9053
AutomapHostsOnResolve 1
AutomapHostsSuffixes .onion,.exit

# Circuit isolation for better anonymity
IsolateDestAddr 1
IsolateDestPort 1

## Performance Settings
# Speed up circuits
CircuitBuildTimeout 30
LearnCircuitBuildTimeout 0

# Connection limits
ConnLimit 1000
MaxClientCircuitsPending 32

## Logging (minimal for privacy)
Log notice syslog
SafeLogging 1

## Disable features that could reduce anonymity
# Disable bridge usage (for standard setup)
UseBridges 0

# Disable GeoIP for additional privacy
# GeoIPFile
# GeoIPv6File

## Exit policy (client only - no exit traffic)
ExitPolicy reject *:*
EOF

    # SET PROPER PERMISSIONS: Tor requires specific ownership
    chown debian-tor:debian-tor /etc/tor/torrc
    chmod 644 /etc/tor/torrc
    
    # CONFIGURE TOR USER AND DIRECTORIES
    echo "Setting up Tor service directories..."
    
    # Ensure Tor data directory exists with correct permissions
    mkdir -p /var/lib/tor
    chown debian-tor:debian-tor /var/lib/tor
    chmod 700 /var/lib/tor
    
    # Ensure Tor log directory exists
    mkdir -p /var/log/tor
    chown debian-tor:adm /var/log/tor
    chmod 750 /var/log/tor
    
    # Ensure Tor run directory exists
    mkdir -p /var/run/tor
    chown debian-tor:debian-tor /var/run/tor
    chmod 755 /var/run/tor
    
    # Note: Hidden service directories will be created automatically by Tor
    # with correct permissions when the service starts
    
    echo "Starting Tor service..."
    
    # START AND ENABLE TOR SERVICE
    systemctl enable tor
    systemctl restart tor
    
    # Verify Tor is running
    sleep 3  # Give Tor time to start
    if systemctl is-active tor &>/dev/null; then
        echo "Tor service started successfully!"
    else
        echo "Error: Failed to start Tor service"
        echo "Checking Tor status..."
        systemctl status tor --no-pager -l
        exit 1
    fi
    
    # VERIFY TOR FUNCTIONALITY: Test SOCKS proxy
    echo "Testing Tor connectivity..."
    
    if command -v curl >/dev/null 2>&1; then
        # Test if we can connect through Tor
        echo "Testing anonymous connection through Tor..."
        
        # Try to get IP through Tor (with timeout)
        tor_ip=$(timeout 15 curl -s --socks5-hostname 127.0.0.1:9050 https://check.torproject.org/api/ip 2>/dev/null | grep -o '"IsTor":true' || echo "")
        
        if [[ -n "$tor_ip" ]]; then
            echo "Tor connectivity test successful!"
            echo "Anonymous browsing is working"
        else
            echo "Tor connectivity test inconclusive (may need time to build circuits)"
            echo "   Tor service is running, circuits may still be building"
        fi
    else
        echo "Tor service is running (curl not available for connectivity test)"
    fi
    
    # FIREWALL NOTE: UFW will be configured in a future step
    echo "UFW firewall configuration will be handled in a future step."
    echo "Tor ports (9050, 9051, 9053) are localhost-only by default."
    
    echo ""
    echo "========================================"
    echo "         TOR SETUP COMPLETE"
    echo "========================================"
    echo ""
    echo "Tor Configuration:"
    echo "- SOCKS Proxy: 127.0.0.1:9050 (localhost)"
    if [[ "$wireguard_running" == "true" ]]; then
        echo "- SOCKS Proxy: 10.11.12.1:9050 (WireGuard clients)"
    fi
    echo "- Control Port: 127.0.0.1:9051 (with cookie auth)"
    echo "- DNS Port: 127.0.0.1:9053"
    echo "- Log File: /var/log/tor/log"
    echo ""
    echo "Hidden Services:"
    echo "- Nginx (port 80): /var/lib/tor/nginx_hidden_service/hostname"
    echo "- SSH (port 22): /var/lib/tor/ssh_hidden_service/hostname"
    echo ""
    echo "To view hidden service addresses:"
    echo "- Nginx: sudo cat /var/lib/tor/nginx_hidden_service/hostname"
    echo "- SSH: sudo cat /var/lib/tor/ssh_hidden_service/hostname"
    echo ""
    echo "Cookie Authentication (for nyx):"
    echo "- Cookie file: /var/lib/tor/control_auth_cookie"
    echo "- Run nyx: sudo -u debian-tor nyx"
    echo "- Alternative: Add user to debian-tor group: sudo usermod -aG debian-tor \$USER"
    echo ""
    echo "Usage Examples:"
    echo "- Browse with curl: curl --socks5-hostname 127.0.0.1:9050 https://example.com"
    if [[ "$wireguard_running" == "true" ]]; then
        echo "- WireGuard client: curl --socks5-hostname 10.11.12.1:9050 https://example.com"
    fi
    echo "- Check Tor status: systemctl status tor"
    echo "- View Tor logs: sudo tail -f /var/log/tor/log"
    echo "- Test Tor: curl --socks5-hostname 127.0.0.1:9050 https://check.torproject.org"
    echo ""
    echo "Browser Configuration:"
    if [[ "$wireguard_running" == "true" ]]; then
        echo "- SOCKS Host: 127.0.0.1 (or 10.11.12.1 via WireGuard)"
    else
        echo "- SOCKS Host: 127.0.0.1"
    fi
    echo "- SOCKS Port: 9050"
    echo "- SOCKS Version: 5"
    echo "- DNS through SOCKS: Enable"
    echo ""
    echo "Security Notes:"
    echo "- Tor is configured for maximum anonymity"
    echo "- All traffic is isolated and encrypted"
    echo "- DNS requests go through Tor (no leaks)"
    echo "- No exit relay functionality (client only)"
    echo "- Hidden services use v3 addresses for enhanced security"
    echo ""
    
    mark_step_completed 8
}

# Execute function if called directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    tor
fi