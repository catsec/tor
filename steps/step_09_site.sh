#!/bin/bash
# Step 9: Hardened Nginx Site Configuration
# Purpose: Replace default nginx site with hardened demo page
# Security: Serves only index.html, no directory traversal, localhost only
# Content: Black background with centered white "Welcome to the dark net" text

# Source utilities
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/../lib/utils.sh"

site() {
    # Check if previous step requires reboot before proceeding
    check_reboot_required "site" "9"
    
    echo "Step 9: Setting up hardened nginx site..."
    
    # DEPENDENCY CHECK: Ensure nginx is installed
    if ! command -v nginx &>/dev/null; then
        echo "Error: nginx not found. Please run steps 2 and 3 (packages and verify) first."
        exit 1
    fi
    
    # HARDENED NGINX CONFIGURATION
    echo "Creating hardened nginx configuration..."
    
    # Backup existing configuration
    if [[ -f /etc/nginx/sites-available/default ]]; then
        cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.backup.$(date +%Y%m%d_%H%M%S)
        echo "Existing nginx configuration backed up"
    fi
    
    # Create hardened site configuration
    cat > /etc/nginx/sites-available/default << 'EOF'
# Hardened nginx configuration - localhost only
# Generated by Debian Security Setup Script

server {
    # Listen only on localhost port 80
    listen 127.0.0.1:80 default_server;
    
    # Server identification
    server_name _;
    
    # Document root
    root /var/www/html;
    index index.html;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Content-Security-Policy "default-src 'self'; style-src 'unsafe-inline'" always;
    
    # Disable server tokens
    server_tokens off;
    
    # Main location - serve only index.html
    location = / {
        try_files /index.html =404;
    }
    
    # Serve index.html directly
    location = /index.html {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # Deny all other requests
    location / {
        return 404;
    }
    
    # Security: Block common attack patterns
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block PHP execution
    location ~ \.php$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common files
    location ~ \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Disable access logs for 404s
    log_not_found off;
}
EOF
    
    # Create the demo page
    echo "Creating hardened demo page..."
    
    cat > /var/www/html/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dark Net Portal</title>
    <style>
        body {
            background-color: #000000;
            color: #ffffff;
            font-family: 'Courier New', monospace;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
        }
        .container {
            font-size: 2.5em;
            font-weight: bold;
            text-shadow: 0 0 10px #ffffff;
            animation: glow 2s infinite alternate;
        }
        @keyframes glow {
            from { text-shadow: 0 0 10px #ffffff; }
            to { text-shadow: 0 0 20px #ffffff, 0 0 30px #ffffff; }
        }
    </style>
</head>
<body>
    <div class="container">
        WELCOME TO THE DARK NET
    </div>
</body>
</html>
EOF
    
    # Set proper permissions
    chown -R www-data:www-data /var/www/html
    chmod 644 /var/www/html/index.html
    chmod 755 /var/www/html
    
    # Remove any other files in web root for security
    find /var/www/html -type f ! -name "index.html" -delete 2>/dev/null || true
    
    # Test nginx configuration
    if nginx -t; then
        echo "Nginx configuration is valid"
        
        # Enable and start nginx service
        systemctl enable nginx
        systemctl restart nginx
        
        # Verify nginx is running
        if systemctl is-active nginx &>/dev/null; then
            echo "Nginx service started successfully!"
        else
            echo "Error: Failed to start nginx service"
            exit 1
        fi
    else
        echo "Error: Invalid nginx configuration"
        # Restore backup if it exists
        if [[ -f /etc/nginx/sites-available/default.backup.* ]]; then
            latest_backup=$(ls -t /etc/nginx/sites-available/default.backup.* | head -n1)
            cp "$latest_backup" /etc/nginx/sites-available/default
            echo "Restored previous nginx configuration"
        fi
        exit 1
    fi
    
    echo ""
    echo "========================================"
    echo "       HARDENED SITE SETUP COMPLETE"
    echo "========================================"
    echo ""
    echo "Site Configuration:"
    echo "- URL: http://127.0.0.1 (localhost only)"
    echo "- Document root: /var/www/html"
    echo "- Serves only: index.html"
    echo "- Security: No directory traversal, no PHP, hardened headers"
    echo ""
    echo "Hidden Service Access:"
    echo "- Nginx hidden service available via Tor"
    echo "- Hidden service address: /var/lib/tor/nginx_hidden_service/hostname"
    echo ""
    echo "Security Features:"
    echo "- Localhost only binding (127.0.0.1:80)"
    echo "- Directory traversal protection"
    echo "- PHP execution blocked"
    echo "- Security headers enabled"
    echo "- Only index.html accessible"
    echo "- All other requests return 404"
    echo ""
    echo "Test the site:"
    echo "- Local: curl http://127.0.0.1"
    echo "- Via Tor: curl --socks5-hostname 127.0.0.1:9050 http://\$(cat /var/lib/tor/nginx_hidden_service/hostname)"
    echo ""
    
    mark_step_completed 9
}

# Execute function if called directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    site
fi